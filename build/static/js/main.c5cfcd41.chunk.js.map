{"version":3,"sources":["assets/background.png","Firebase.js","components/Question.js","actions/QuestionsActions.js","components/Categories.js","pages/DashboardPage.js","pages/QuizPage.js","pages/ResultPage.js","reducers/index.js","reducers/QuestionsReducer.js","App.js","serviceWorker.js","index.js","assets/logo.svg","assets/logo.png"],"names":["module","exports","Firebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Question","props","dispatch","useDispatch","React","useState","value","setValue","category","setCategory","options","setOptions","categories","useSelector","state","questions","map","cat","option","setOption","locked","setLocked","imageOptions","setImageOptions","submitQuestion","question","a","database","ref","push","then","snapshot","s","child","key","once","childSnapshot","storedQuestion","val","id","q","index","uploadTask","storage","put","statement","on","error","getDownloadURL","downloadURL","console","log","set","type","errorObject","code","handleChange","event","target","length","files","useEffect","resData","loadedData","className","List","ListItem","style","fontSize","fontFamily","marginBottom","TextField","label","multiline","fullWidth","onChange","variant","item","Grid","container","direction","justify","alignItems","spacing","xs","md","disabled","FormControl","InputLabel","Select","MenuItem","Button","color","onClick","filter","opt","justifyContent","accept","capture","text","FormControlLabel","control","Switch","checked","prev","labelPlacement","Category","name","setName","heading","setHeading","description","setDescription","submitCategory","storedCategory","data","Chip","onDelete","undefined","addCategory","setAddCategory","height","logo","require","QuizPage","user","setUser","email","setEmail","answers","setAnswers","currentIndex","setCurrentIndex","submitable","setSubmitable","results","setResults","submitQuiz","totals","key1","Object","keys","percentiles","group","result","max","storedResult","reduce","obj","orderByChild","equalTo","forEach","fetch","method","body","JSON","stringify","headers","response","json","status","alert","actions","handleImageSelect","qId","position","top","left","margin","src","flex","flexDirection","marginTop","textAlign","component","RadioGroup","ans","Radio","width","backgroundColor","button","obutton","to","textDecoration","Paper","elevation","padding","onEmailChange","ResultPage","datasets","hoverBackgroundColor","labels","resultData","backgroundImage","backgroundRepeat","backgroundSize","alignSelf","fontWeight","maintainAspectRatio","combineReducers","page","action","store","createStore","rootReducer","applyMiddleware","ReduxThunk","App","exact","path","class","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c5cfcd41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.40ec889e.png\";","import firebase from 'firebase';\n\nconst Firebase = firebase.initializeApp({\n  apiKey: 'AIzaSyCwZMjeAJozr_csH5dA4rP1-dKi7Sn6ymU',\n  authDomain: 'authentication-1c4c2.firebaseapp.com',\n  databaseURL: 'https://authentication-1c4c2.firebaseio.com',\n  projectId: 'authentication-1c4c2',\n  storageBucket: 'authentication-1c4c2.appspot.com',\n  messagingSenderId: '517700089892',\n  appId: '1:517700089892:web:4d1cc5c977317493db80b1',\n  measurementId: 'G-DJPZDRH33F',\n});\n\nexport default Firebase;\n","import React from \"react\";\nimport {\n  TextField,\n  Button,\n  Grid,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\nimport firebase from \"../Firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport logo from \"../assets/logo.svg\";\nimport \"../styles/App.css\";\nimport Option from \"./Option\";\nimport * as actions from \"../actions\";\nimport { useEffect } from \"react\";\nconst Question = (props) => {\n  const dispatch = useDispatch();\n  // const classes = useStyles();\n  const [value, setValue] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [options, setOptions] = React.useState([]);\n  const categories  = useSelector(state=>state.questions.categories?.map(cat=>cat['name']))\n  const [option, setOption] = React.useState(\"\");\n  const [locked, setLocked] = React.useState(false);\n  const [imageOptions, setImageOptions] = React.useState(false);\n\n  const toggleLocked = () => {\n    setLocked((prev) => !prev);\n  };\n  const toggleImageOptions = () => {\n    {\n      !options.length && setImageOptions((prev) => !prev);\n    }\n  };\n\n  const submitQuestion = () => {\n    dispatch(actions.addQuestion({ value, options, locked ,imageOptions}));\n    setValue(\"\");\n    setOptions([]);\n    setLocked(false);\n    setCategory(\"\");\n    setOption(\"\");\n    setLocked(false);\n    setImageOptions(false);\n  };\n  const handleChange = (type, event) => {\n    \n    switch (type) {\n      case \"question\":\n        setValue(event.target.value);\n        return;\n      case \"option\":\n        setOption(event.target.value);\n        return;\n      case \"category\":\n        setCategory(event.target.value);\n        return;\n      case \"options\":\n        console.log(value, options);\n        options.push({ id: options.length + 1, statement: option, category });\n        setOption(\"\");\n        setCategory(\"\");\n        return;\n      case \"image\":\n        setOption(event.target.files[0]);\n        return;\n      default:\n        return;\n    }\n  };\n  const deleteOption = (id) => {\n    setOptions(options.filter((opt) => opt.id !== id));\n  };\n  const addOption = () => {\n    return <Option></Option>;\n  };\n\n  useEffect(() => {\n    dispatch(actions.fetchCategories());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <List>\n      <ListItem style={{ fontSize: 20, fontFamily: \"Roboto\" ,marginBottom:10}}>\n              Add Question\n            </ListItem>\n        <ListItem>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Question statement here\"\n            multiline\n            fullWidth={true}\n            value={value}\n            onChange={(event) => handleChange(\"question\", event)}\n            variant=\"outlined\"\n          />\n        </ListItem>\n        {options.map((item) => (\n          <ListItem key={item.id}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={3}\n            >\n              <Grid item xs={12} md={9}>\n                \n                  <TextField\n                    id=\"standard-multiline-flexible\"\n                    label=\"Option statement here\"\n                    disabled\n                    multiline\n                    fullWidth={true}\n                    value={item.statement}\n                    //   onChange={(text) => handleChange(\"option\", text)}\n                    variant=\"outlined\"\n                  />\n                \n              </Grid>\n              <Grid item xs={10} md={2}>\n                <FormControl disabled variant=\"outlined\" fullWidth>\n                  <InputLabel>Category</InputLabel>\n                  <Select\n                    value={item.category}\n                    onChange={(event) => handleChange(\"category\", event)}\n                    label=\"Category\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n\n                    {categories.map((category) => (\n                      <MenuItem value={category}>{category}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item md={1} xs={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => deleteOption(item.id)}\n                >\n                  Delete\n                </Button>\n              </Grid>\n            </Grid>\n          </ListItem>\n        ))}\n\n        {value && (\n          <ListItem style={{ justifyContent: \"space-between\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              // justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={3}\n            >\n              <Grid item md={8} xs={12}>\n              {!imageOptions ? ( <TextField\n                  id=\"standard-multiline-flexible\"\n                  label=\"Option statement here\"\n                  multiline\n                  fullWidth\n                  value={option}\n                  onChange={(text) => handleChange(\"option\", text)}\n                  variant=\"outlined\"\n                />) : (\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    capture=\"camera\"\n                    id=\"cameraInput\"\n                    onChange={(event) => handleChange(\"image\", event)}\n                  ></input>\n                )}\n              </Grid>\n              <Grid item md={2} xs={8}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Category\n                  </InputLabel>\n                  <Select\n                    value={category}\n                    onChange={(event) => handleChange(\"category\", event)}\n                    label=\"Category\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n\n                    {categories.map((category) => (\n                      <MenuItem value={category}>{category}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item md={2} xs={4}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!option && !category && true}\n                  onClick={(event) => handleChange(\"options\", event)}\n                >\n                  Add Option\n                </Button>\n              </Grid>\n            </Grid>\n          </ListItem>\n        )}\n        <ListItem style={{ justifyContent: \"space-between\" }}>\n          <FormControlLabel\n            value={true}\n            control={\n              <Switch\n                color=\"primary\"\n                checked={locked}\n                onChange={toggleLocked}\n              />\n            }\n            label=\"Locked\"\n            labelPlacement=\"Locked\"\n          />\n          <FormControlLabel\n            value={true}\n            control={\n              <Switch\n                color=\"primary\"\n                checked={imageOptions}\n                onChange={toggleImageOptions}\n              />\n            }\n            label=\"Image Options\"\n            labelPlacement=\"Image Options\"\n          />\n\n          {\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!locked}\n              onClick={() => submitQuestion()}\n            >\n              Submit Question\n            </Button>\n          }\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Question;\n","import firebase from \"../Firebase\";\nexport const addQuestion = (question) => {\n  return async (dispatch) => {\n    var reference = \"\";\n    var storedQuestion;\n    await firebase\n      .database()\n      .ref(\"Questions\")\n      .push(question)\n      .then((snapshot) => {\n        let s = [];\n        firebase\n          .database()\n          .ref(\"Questions\")\n          .child(snapshot.key)\n          .once(\n            \"value\",\n            function (childSnapshot) {\n              storedQuestion = { ...childSnapshot.val(), id: snapshot.key };\n              if (question.imageOptions) {\n                firebase\n                  .database()\n                  .ref(\"Questions/\" + snapshot.key + \"/options\");\n\n                var options = question.options.map(async (q, index) => {\n                  var uploadTask = firebase\n                    .storage()\n                    .ref(\"Questions/\" + snapshot.key + \"/options/\" + q.id)\n                    .put(q.statement);\n\n                  await uploadTask.on(\n                    \"state_changed\",\n                    function (snapshot) {},\n                    function (error) {},\n                    function () {\n                      uploadTask.snapshot.ref\n                        .getDownloadURL()\n                        .then(function (downloadURL) {\n                          console.log(\"File available at\", downloadURL);\n                          firebase\n                            .database()\n                            .ref(\n                              \"Questions/\" +\n                                snapshot.key +\n                                \"/options/\" +\n                                (q.id - 1) +\n                                \"/statement\"\n                            )\n                            .set(downloadURL);\n                          console.log(index, downloadURL);\n                          s.push({ ...q, statement: downloadURL });\n                        });\n                    }\n                  );\n                });\n\n                // firebase\n                //   .database()\n                //   .ref(\"Questions/\" + snapshot.key + \"/options\")\n                //   .update(s);\n              }\n              storedQuestion = { ...storedQuestion, options: s };\n              console.log(storedQuestion);\n              dispatch({ type: \"ADD_QUESTION\", question: { storedQuestion } });\n            },\n            function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }\n          );\n        reference = firebase.database().ref(\"Questions\").child(snapshot.key);\n      });\n  };\n};\n\nexport const fetchQuestions = () => {\n  return async (dispatch) => {\n    var reference = \"\";\n    var storedQuestion;\n    await firebase\n      .database()\n      .ref(\"Questions\")\n      .on(\n        \"value\",\n        function (childSnapshot) {\n          console.log(childSnapshot.val());\n          const resData = childSnapshot.val();\n          const loadedData = [];\n\n          for (const key in resData) {\n            loadedData.push({\n              id: key,\n              ...resData[key],\n            });\n          }\n          dispatch({ type: \"FETCH_QUESTIONS\", questions: loadedData });\n        },\n        function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        }\n      );\n  };\n};\n\nexport const setResults = (user, results) => {\n  return async (dispatch,state) => {\n    var totals = [];\n    for (const key in results) {\n      var key1 = Object.keys(results[key])[0];\n      var value = results[key][key1];\n      console.log(value);\n      totals[value] = (totals[value] || 0) + 1;\n    }\n    // totals now looks something like {Q3:18, Q1:16, Q4:66, Q1:12}\n    let percentiles = [];\n    for (const key in totals) {\n      totals[key] = (100 * totals[key]) / results.length;\n      percentiles.push({ key: key, value: totals[key] });\n    }\n    console.group(\"perce\", percentiles);\n    await firebase\n      .database()\n      .ref(\"Results\")\n      .push({ user: user, result: percentiles })\n      .then((snapshot) => {\n        firebase\n          .database()\n          .ref(\"Results\")\n          .child(snapshot.key)\n          .on(\n            \"value\",\n            function (childSnapshot) {\n              const storedResult = { ...childSnapshot.val(), id: snapshot.key };\n              console.log(storedResult.result);\n\n              dispatch({\n                type: \"ADD_PERCENTILES\",\n                percentiles: storedResult.result,\n              });\n              let max, d;\n              if (storedResult.result.length) {\n                max = storedResult.result?.reduce((max, obj) =>\n                  max.value > obj.value ? max : obj\n                );\n                console.log(\"max\", max);\n                firebase\n                  .database()\n                  .ref(\"Categories\")\n                  .orderByChild(\"name\")\n                  .equalTo(max.key)\n                  .once(\"value\", function (snapshot) {\n                    // console.log(snapshot.val().name);\n                    // // console.log(snapshot.val()['name'])\n                    snapshot.forEach(function (data) {\n                      // console.log(data.val())\n                      dispatch({\n                        type: \"SET_PERSONALITY_CATEGORY\",\n                        category: data.val(),\n                      });\n                    });\n                  });\n              }\n              fetch(\"http://localhost:3001/send\", {\n                method: \"POST\",\n                body: JSON.stringify(state.category),\n                headers: {\n                  // Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n              })\n                .then((response) => response.json())\n                .then((response) => {\n                  if (response.status === \"success\") {\n                    alert(\"Message Sent.\");\n                \n                  } else if (response.status === \"fail\") {\n                    alert(\"Message failed to send.\");\n                  }\n                });\n            },\n            function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }\n          );\n        // reference = firebase.database().ref(\"Questions\").child(snapshot.key);\n      });\n  };\n};\n\nexport const setUser = (user) => {\n  return { type: \"SET_USER\", user };\n};\n\nexport const addCategory = (category) => {\n  return async (dispatch) => {\n    var reference = \"\";\n    var storedCategory;\n    await firebase\n      .database()\n      .ref(\"Categories\")\n      .push(category)\n      .then((snapshot) => {\n        firebase\n          .database()\n          .ref(\"Categories\")\n          .child(snapshot.key)\n          .on(\n            \"value\",\n            function (childSnapshot) {\n              storedCategory = { ...childSnapshot.val(), id: snapshot.key };\n              // console.log(storedQuestion);\n              dispatch({ type: \"ADD_CATEGORY\", category: storedCategory });\n            },\n            function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }\n          );\n        // reference = firebase.database().ref(\"Questions\").child(snapshot.key);\n      });\n  };\n};\n\nexport const fetchCategories = () => {\n  return async (dispatch) => {\n    await firebase\n      .database()\n      .ref(\"Categories\")\n      .on(\n        \"value\",\n        function (snapshot) {\n          // console.log(snapshot.val());\n          const resData = snapshot.val();\n          const loadedData = [];\n\n          for (const key in resData) {\n            loadedData.push({\n              id: key,\n              ...resData[key],\n            });\n          }\n          dispatch({ type: \"FETCH_CATEGORIES\", categories: loadedData });\n        },\n        function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        }\n      );\n  };\n};\n","import React from \"react\";\nimport {\n  TextField,\n  Button,\n  Grid,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  Switch,\n  Chip,\n} from \"@material-ui/core\";\nimport firebase from \"../Firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport logo from \"../assets/logo.svg\";\nimport \"../styles/App.css\";\nimport Option from \"./Option\";\nimport * as actions from \"../actions\";\nconst Category = (props) => {\n  const dispatch = useDispatch();\n  // const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [heading, setHeading] = React.useState(\"\");\n  const [description, setDescription] = React.useState();\n  \n  const [locked, setLocked] = React.useState(false);\n  const categories  = useSelector(state=>state.questions.categories.map(cat=>cat['name']))\n  const handleDelete = (chipToDelete) => () => {\n    // setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n  }; \n\n  const toggleLocked = () => {\n    setLocked((prev) => !prev);\n  };\n \n\n  const submitCategory = () => {\n    dispatch(actions.addCategory({ name,heading,description,locked}));\n    setName('')\n    setHeading('')\n    setDescription('') \n    setLocked(false)\n  };\n  const handleChange = (type, event) => {\n    // console.log(value, option);\n    switch (type) {\n      case \"name\":\n        setName(event.target.value);\n        return;\n      case \"heading\":\n        setHeading(event.target.value);\n        return;\n      case \"description\":\n        setDescription(event.target.value);\n        return;\n    //   case \"options\":\n    //     console.log(value, options);\n    //     options.push({ id: options.length + 1, statement: option, category });\n    //     setOption(\"\");\n    //     setCategory(\"\");\n    //     return;\n    //   case \"image\":\n    //     setOption(event.target.files[0]);\n    //     return;\n      default:\n        return;\n    }\n  };\n \n\n  return (\n    <div className=\"App\">\n      <List>\n      <ListItem style={{ fontSize: 20, fontFamily: \"Roboto\" ,marginBottom:10}}>\n              Add Category\n            </ListItem>\n        <ListItem>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Category statement here\"\n            multiline\n            fullWidth={true}\n            value={name}\n            onChange={(event) => handleChange(\"name\", event)}\n            variant=\"outlined\"\n          />\n        \n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Category statement here\"\n            multiline\n            fullWidth={true}\n            value={heading}\n            onChange={(event) => handleChange(\"heading\", event)}\n            variant=\"outlined\"\n          />\n        \n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Category statement here\"\n            multiline\n            fullWidth={true}\n            value={description}\n            onChange={(event) => handleChange(\"description\", event)}\n            variant=\"outlined\"\n          />\n        \n        </ListItem>\n       \n\n     \n        <ListItem style={{ justifyContent: \"space-between\" }}>\n          <FormControlLabel\n            value={true}\n            control={\n              <Switch\n                color=\"primary\"\n                checked={locked}\n                onChange={toggleLocked}\n              />\n            }\n            label=\"Locked\"\n            labelPlacement=\"Locked\"\n          />\n          \n\n          {\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!locked}\n              onClick={() => submitCategory()}\n            >\n              Submit Category\n            </Button>\n          }\n        </ListItem>\n      </List>\n      <div>\n          {categories.map(data=><li key={data.id}>\n            <Chip\n            //   icon={icon}\n              label={data.name}\n              onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n            //   className={classes.chip}\n            />\n            </li>)}\n          </div>\n    </div>\n  );\n};\n\nexport default Category;\n","import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  Grid,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\nimport firebase from \"../Firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport logo from \"../assets/logo.svg\";\nimport \"../styles/App.css\";\n\nimport Question from \"../components/Question\";\nimport Category from '../components/Categories'\nimport * as actions from \"../actions\";\n\nexport default ()=>{\n\n  const [addCategory,setAddCategory]=useState(false)\n  const toggleAddCategory=()=>{\n    setAddCategory(prev=>!prev)\n  }\n  \n  return(\n    <div style={{height:'100vh'}}> <FormControlLabel\n    value={true}\n    control={\n      <Switch\n        color=\"primary\"\n        checked={addCategory}\n        onChange={toggleAddCategory}\n      />\n    }\n    label={addCategory?'Switch to add Questions':'Switch to add Categories'}\n  \n  />{!addCategory?<Question></Question>:<Category></Category>}</div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  Grid,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  Switch,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  Paper,\n  ListItemText,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"../styles/App.css\";\n\nimport * as actions from \"../actions\";\nconst logo = require(\"../assets/logo.png\");\nconst QuizPage = (props) => {\n  const questions = useSelector((state) =>\n    state.questions.questions.filter((q) => q.locked)\n  );\n\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [answers, setAnswers] = useState([]); //answers\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [submitable, setSubmitable] = useState(false);\n  const [results, setResults] = useState([]);\n  const dispatch = useDispatch();\n\n  const startQuiz = () => {\n    setUser(email);\n    //  history.push('/result')\n  };\n  const submitQuiz = () => {\n    dispatch(actions.setResults(user, results));\n    //  history.push('/result')\n  };\n\n  const handleChange = (qId, event, category) => {\n    setAnswers([...answers, { [qId]: event.target.value }]);\n    setResults([...results, { [qId]: category[0].category }]);\n\n    if (currentIndex < questions.length + 1) setCurrentIndex(currentIndex + 1);\n    else setSubmitable(true);\n  };\n  const handleImageSelect = (qId, option) => {\n    console.log(qId, option);\n    setAnswers([...answers, { [qId]: option.statement }]);\n    setResults([...results, { [qId]: option.category }]);\n\n    if (currentIndex < questions.length - 1) setCurrentIndex(currentIndex + 1);\n    else setSubmitable(true);\n  };\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n  useEffect(() => {\n    dispatch(actions.fetchQuestions());\n  }, [dispatch]);\n\n  return (\n    <div style={{ height: \"70vh\" }}>\n      <img\n        style={{\n          height: 40,\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: \"5%\",\n        }}\n        src={logo}\n      />\n      {\n        user\n         ? (\n          <div\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n\n              margin: 10,\n              marginTop: 50,\n            }}\n          >\n            <List style={{ fontFamily: \"Roboto\", fontSize: 20 }}>\n              <ListItem style={{ fontSize: 40, fontFamily: \"Droid Sans\" }}>\n                Spørgsmål / Beskrivelse\n              </ListItem>\n\n              {questions.map(\n                (item, index) =>\n                  index === currentIndex && (\n                    <div>\n                      <ListItem\n                        style={{\n                          marginTop: 20,\n                          marginBottom: 20,\n                          color: \"gray\",\n                        }}\n                      >\n                        {item.value}\n                      </ListItem>\n                      <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        // alignItems=\"center\"\n                        spacing={3}\n                      >\n                        <Grid item xs={6} style={{ textAlign: \"left\" }}>\n                          {!item.imageOptions && (\n                            <FormControl component=\"fieldset\">\n                              <RadioGroup\n                                value={answers[item.id]}\n                                onChange={(event) => {\n                                  var ans = item.options.filter(\n                                    (opt) =>\n                                      opt.statement === event.target.value\n                                  );\n                                  console.log(ans);\n                                  handleChange(item.id, event, ans);\n                                }}\n                              >\n                                {item.options?.map((option) => (\n                                  <FormControlLabel\n                                    value={option.statement}\n                                    control={<Radio />}\n                                    label={option.statement}\n                                  />\n                                ))}\n                              </RadioGroup>\n                            </FormControl>\n                          )}\n                        </Grid>{\" \"}\n                        <Grid item xs={6}>\n                          {item.imageOptions && (\n                            <div\n                              style={{\n                                flex: 1,\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <div\n                                style={{\n                                  position: \"relative\",\n                                  height: 300,\n                                  width: 500,\n                                  backgroundColor: \"rgb(238,186,190)\",\n                                }}\n                              >\n                                \n                                 \n                                \n                                  <List\n                                   style={{\n                                    position: \"absolute\",\n                                    top: -40,\n                                    left: -40,\n                                    height: 300,\n                                    width: 500,\n                                   \n                                  }}>\n                                    <Grid\n                                      container\n                                      direction=\"row\"\n                                      justify=\"space-between\"\n                                      alignItems=\"flex-start\"\n                                      spacing={3}\n                                    >\n                                      {item.options?.map((option) => (\n                                        <Grid\n                                          item\n                                          xs={4}\n                                          style={{ textAlign: \"left\" }}\n                                        >\n                                          <ListItem\n                                            button\n                                            onClick={() =>\n                                              handleImageSelect(item.id, option)\n                                            }\n                                          >\n                                            <img\n                                              style={{ height: 120, width: 100 }}\n                                              src={option.statement}\n                                            ></img>\n                                          </ListItem>\n                                        </Grid>\n                                      ))}\n                                      {item.options?.map((option) => (\n                                        <Grid\n                                          item\n                                          xs={4}\n                                          style={{ textAlign: \"left\" }}\n                                        >\n                                          <ListItem\n                                            button\n                                            obutton\n                                            key={option.statement}\n                                            onClick={() =>\n                                              handleImageSelect(item.id, option)\n                                            }\n                                          >\n                                            <img\n                                              style={{ height: 120, width: 100 }}\n                                              src={option.statement}\n                                            ></img>\n                                          </ListItem>\n                                        </Grid>\n                                      ))}\n                                    </Grid>\n                                  </List>\n                                \n                              </div>\n\n                              {/* <div\n                                style={{\n                                  // height: 100,\n                                  // marginTop: 50,\n                                  // marginLeft: -5,\n                                  // marginRight: 5,\n                                  // marginBottom:-10,\n                                  backgroundColor: \"rgb(238,186,190)\",\n                                }}\n                              >\n                         </div> */}\n                            </div>\n                          )}\n                        </Grid>\n                      </Grid>\n                    </div>\n                  )\n              )}\n            </List>\n            <Link to=\"/result\" style={{ textDecoration: \"none\" }}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginTop: 20 }}\n                disabled={!submitable}\n                onClick={() => submitQuiz()}\n              >\n                indsend quiz\n              </Button>\n            </Link>\n          </div>\n        ) : (\n          <Paper\n            elevation={3}\n            style={{\n              margin: 200,\n              marginTop: 50,\n              marginBottom: 50,\n              padding: 50,\n            }}\n          >\n            <div style={{ flexDirection: \"column\", flex: 1, marginBottom: 50 }}>\n              <TextField\n                label=\"Email\"\n                value={email}\n                id=\"outlined-margin-dense\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={(event) => onEmailChange(event)}\n                style={{}}\n              />\n            </div>{\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!email}\n              onClick={startQuiz}\n            >\n              Start Quiz\n            </Button>\n          </Paper>\n        )\n      }\n    </div>\n  );\n};\n\nexport default QuizPage;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"../Firebase\";\n// import '@culturehq/charts/dist/style.css'\n// import {PieChart} from '@culturehq/chart'\nimport {\n  TextField,\n  Button,\n  Grid,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  Switch,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  rgbToHex,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"../styles/App.css\";\nimport { Doughnut, Bar, Pie } from \"react-chartjs-2\";\n\nimport * as actions from \"../actions\";\nconst logo = require(\"../assets/logo.png\");\nconst ResultPage = (props) => {\n  const percentiles = useSelector((state) => state.questions.percentiles);\n  const category = useSelector((state) => state.questions.category);\n  let data = {\n    datasets: [\n      {\n        data: [10, 20, 30],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      },\n    ],\n\n    // These labels appear in the legend and in the tooltips when hovering different arcs\n    labels: [\"Red\", \"Yellow\", \"Blue\"],\n  };\n  const resultData = useSelector((state) => {\n    const d = state.questions.percentiles.map((obj) => obj.value);\n    const l = state.questions.percentiles.map((obj) => obj.key);\n\n    return {\n      datasets: [\n        {\n          data: d,\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n        },\n      ],\n\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: l,\n    };\n  });\n  const [submitable, setSubmitable] = useState(false);\n  const [results, setResults] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // console.log('injj')\n    data.datasets.data = [];\n    // let perc=[{key:'abs',value:4},{key:'aooo',value:3}]\n    for (let key in percentiles) {\n      data.datasets.data = percentiles[key];\n      data.labels = key;\n    }\n    // dispatch(actions.fetchQuestions());\n  }, [dispatch]);\n  const fetchRes = () => {\n    console.log(\"in\", percentiles);\n    data.datasets.data = [];\n    for (let key in percentiles) {\n      data.datasets.data = percentiles[key];\n      data.labels = key;\n      console.log(key);\n    }\n  };\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${require(\"../assets/background.png\")})`,\n        backgroundRepeat: \"no-repeat\",\n        width: \"100%\",\n        height: \"100%\",\n        color: \"white\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      {\" \"}\n      \n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        style={{ padding: 80 }}\n         alignItems=\"center\"\n        spacing={3}\n      >\n        <Grid item xs={5} className={\"bg-box\"} style={{padding:30}}>\n         \n          <List\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 20,\n              color: \"rgb(86,84,84)\",\n            }}\n          >\n            <div className={\"App\"}>\n              <ListItem\n                justify={\"center\"}\n                style={{\n                  fontSize: 40,\n                  fontFamily: \"Droid Sans\",\n                  alignSelf: \"center\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Din Stultype er\n              </ListItem>\n            </div>\n          </List>\n\n          <Pie\n            data={resultData}\n            style={{ margin: 50 }}\n            options={{ maintainAspectRatio: false }}\n          />\n        </Grid>{\" \"}\n        <Grid item xs={6} className={\"bg-box\"} style={{padding:30}}>\n          <List\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 20,\n              color: \"rgb(86,84,84)\",\n            }}\n          >\n            <ListItem\n              style={{\n                fontSize: 40,\n                fontFamily: \"Droid Sans\",\n                alignSelf: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {category?.name}\n            </ListItem>\n            <ListItem\n              style={{ marginTop: 20, marginBottom: 20, color: \"gray\" }}\n            >\n              {category?.description}\n            </ListItem>\n          </List>\n        </Grid>{\" \"}\n      </Grid>\n      <img\n        style={{\n          height: 100,\n        }}\n        src={require(\"../assets/logo.png\")}\n      />\n    </div>\n  );\n};\n\nexport default ResultPage;\n","import {combineReducers} from 'redux';\n// import AuthReducer from './AuthReducer';\n// import EmployeeFormReducer from './EmployeeFormReducer';\n// import EmployeeReducer from './EmployeeReducer';\n\nimport QuestionsReducer from './QuestionsReducer'\n\nexport default combineReducers({\n questions:QuestionsReducer\n//   employeeForm: EmployeeFormReducer,\n//   employees: EmployeeReducer,\n});\n\n","const ADD_QUESTION = \"ADD_QUESTION\";\nconst FETCH_QUESTIONS = \"FETCH_QUESTIONS\";\nconst ADD_PERCENTILES = \"ADD_PERCENTILES\";\nconst ADD_CATEGORY = \"ADD_CATEGORY\";\n\nexport default (\n  state = { questions: [], page: \"quiz\", categories: [] ,percentiles:[],category:{}},\n  action\n) => {\n  switch (action.type) {\n    case ADD_QUESTION:\n      return {\n        questions: [\n          ...state.questions,\n          { [action.question.id]: action.question },\n        ],\n      };\n    case FETCH_QUESTIONS:\n      return { ...state, questions: action.questions };\n    case ADD_PERCENTILES:\n      return { ...state, percentiles: action.percentiles };\n    case \"SET_USER\":\n      return { ...state, user: action.user };\n    case ADD_CATEGORY:\n      console.log(action.category);\n      return { ...state, categories: [...state.categories, action.category] };\n    case \"FETCH_CATEGORIES\":\n      console.log(action.categories)\n      return { ...state, categories: action.categories };\n      case 'SET_PERSONALITY_CATEGORY':\n        return {...state,category:action.category}\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport logo from \"./assets/logo.svg\";\nimport \"./styles/App.css\";\nimport Question from \"./pages/DashboardPage\";\nimport QuizPage from \"./pages/QuizPage\";\nimport ResultPage from \"./pages/ResultPage\";\nimport QuestionPage from \"./components/Question\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <div className=\"App\">\n              <Route exact path=\"/\">\n                <div class=\"container\">\n                  <div class=\"two\">\n                    <QuizPage />\n                  </div>\n                </div>\n              </Route>\n\n              <Route path=\"/dashboard\">\n              <div class=\"container\">\n                  <div class=\"two\">\n                <Question />\n                </div>\n                </div>\n              </Route>\n\n              <Route path=\"/result\">\n                <ResultPage />\n              </Route>\n            </div>{\" \"}\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b17aba02.png\";"],"sourceRoot":""}